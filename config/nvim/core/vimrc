if &compatible
	" vint: -ProhibitSetNoCompatible
	set nocompatible
	" vint: +ProhibitSetNoCompatible
endif

" Set main configuration directory as parent directory
let $VIM_PATH = fnamemodify(resolve(expand('<sfile>:p')), ':h:h')

function! s:source_file(path, ...)
	" Source user configuration files with set/global sensitivity
	let use_global = get(a:000, 0, ! has('vim_starting'))
	let abspath = resolve($VIM_PATH . '/' . a:path)
	if ! use_global
		execute 'source' fnameescape(abspath)
		return
	endif

	let tempfile = tempname()
	let content = map(readfile(abspath),
		\ "substitute(v:val, '^\\W*\\zsset\\ze\\W', 'setglobal', '')")
	try
		call writefile(content, tempfile)
		execute printf('source %s', fnameescape(tempfile))
	finally
		if filereadable(tempfile)
			call delete(tempfile)
		endif
	endtry
endfunction

" Initialize startup settings
if has('vim_starting')
	" Use spacebar as leader and ; as secondary-leader
	" Required before loading plugins!
    " default map leader '\'
	let g:mapleader='\'
	"let g:mapleader="\<Space>"
	let g:maplocalleader=';'

	" Vim only, Linux terminal settings
	if !has('nvim') && !has('gui_running') && !has('win32') && !has('win64')
		call s:source_file('config/terminal.vim')
	endif
endif

" 初始化基本配置
call s:source_file('core/init.vim')
" 初始化 plugin
call s:source_file('core/plugins.vim')

" 初始化其他配置文件
call s:source_file('core/general.vim')
call s:source_file('core/filetype.vim')
call s:source_file('core/mappings.vim')
call s:source_file('core/theme.vim')

"
"" Load user custom local settings
"if filereadable($VIM_PATH . '/config/local.vim')
"	call s:source_file('config/local.vim')
"endif
"
set secure
"
"" vim: set ts=2 sw=2 tw=80 noet :
