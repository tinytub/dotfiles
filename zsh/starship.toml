## Inserts a blank line between shell prompts
## add_newline = true
#
#
#format = """
#$username\
#$kubernetes\
#$directory\
#${custom.git_host}\
#$git_branch\
#$git_commit\
#$git_state\
#$git_status\
#$hg_branch\
#$docker_context\
#$package\
#$cmake\
#$dart\
#$deno\
#$dotnet\
#$elixir\
#$elm\
#$erlang\
#$golang\
#$helm\
#$java\
#$julia\
#$kotlin\
#$nim\
#$nodejs\
#$ocaml\
#$perl\
#$php\
#$purescript\
#$python\
#$red\
#$ruby\
#$rust\
#$swift\
#$terraform\
#$vlang\
#$vagrant\
#$zig\
#$nix_shell\
#$conda\
#$aws\
#$gcloud\
#$openstack\
#$env_var\
#$crystal\
#$custom\
#$cmd_duration\
#$lua\
#$memory_usage\
#$time\
#$line_break\
#$jobs\
#$character"""
#
## Replace the "❯" symbol in the prompt with "➜"
#[character]                            # The name of the module we are configuring is "character"
#success_symbol = "[❯](bold red)[❯](bold yellow)[❯](bold green)"     # The "success_symbol" segment is being set to "➜" with the color "bold green"
#error_symbol = "[💀](bold red) "
#
## Disable the package module, hiding it from the prompt completely
#[package]
#disabled = true
#
#[aws]
#format = '☁️ [$symbol($profile )(\($region\) )]($style)'
#style = "bold blue"
#symbol = " "
#[aws.region_aliases]
#ap-southeast-2 = "au-ap"
#us-east-1 = "va"
#
#[battery]
#full_symbol = "🔋"
#charging_symbol = "⚡️"
#discharging_symbol = "💀"
#
#
#[git_commit]
#commit_hash_length = 4
#tag_symbol = "🔖 "
#
#[custom.git_host]
#command = """
#URL=$(command git ls-remote --get-url 2> /dev/null)
#if [[ "$URL" =~ "github" ]]; then
#    ICON=" "
#elif [[ "$URL" =~ "gitlab" ]]; then
#    ICON=" "
#elif [[ "$URL" =~ "bitbucket" ]];then
#    ICON=" "
#elif [[ "$URL" =~ "kernel" ]];then
#    ICON=" "
#elif [[ "$URL" =~ "archlinux" ]];then
#    ICON=" "
#elif [[ "$URL" =~ "gnu" ]];then
#    ICON=" "
#elif [[ "$URL" =~ "git" ]];then
#    ICON=" "
#else
#    ICON=" "
#    URL="localhost"
#fi
#printf "%s" "$ICON"
#"""
#
## for PATTERN in "https" "http" "git" "://" "@"; do
##     [[ "$URL" == "$PATTERN"* ]] && URL="${URL##$PATTERN}"
## done
## for PATTERN in "/" ".git"; do
##     [[ "$URL" == *"$PATTERN" ]] && URL="${URL%%$PATTERN}"
## done
#
#directories = [".git"]
#when = 'git rev-parse --is-inside-work-tree 2> /dev/null'
#shell = ["bash","--norc","--noprofile"]
#style = "bright-yellow bold"
## format = " at [$output]($style)"
#format = "[$output]($style)"
#
#
#[git_branch]
#format = "[$symbol$branch]($style) "
#symbol = "(bold green) "
#truncation_length = 32
#truncation_symbol = ""
#
#[git_state]
#format = '[\($state( $progress_current of $progress_total)\)]($style) '
#cherry_pick = "[🍒 PICKING](bold red)"
#
#[git_status]
#conflicted = "⚔️ "
#ahead = "🏎️💨×${count}"
#behind = "🐢×${count}"
#diverged = "🔱🏎️💨×${ahead_count} 🐢 ×${behind_count}"
#untracked = "🛤️×${count}"
#stashed = "📦"
#modified = "📝×${count}"
#staged = '🗃️[++\($count\)](green)'
#renamed = "👅×${count}"
#deleted = "🗑×${count}"
#format = "$all_status$ahead_behind"
#
#[memory_usage]
#format = "$symbol[${ram}( | ${swap})]($style) "
#threshold = 70
#style = "bold dimmed white"
#disabled = false
#
#
#[golang]
#format = "[ $version](bold cyan) "
#
#[helm]
#format = " [⎈ $version](bold white) "
#
#[nodejs]
#format = " [🤖 $version](bold green) "
#
#[python]
## Only use the `python3` binary to get the version.
#python_binary = "python3"
#
#[terraform]
#format = "[🏎💨 $version$workspace]($style) "
#
#[time]
#disabled = false
#format = '🕙[\[ $time \]]($style) '
#time_format = "%T"
#time_range = "10:00:00-14:00:00"


[aws]
format = '\[[$symbol($profile)(\($region\))(\[$duration\])]($style)\]'

[cmake]
format = '\[[$symbol($version)]($style)\]'

[cmd_duration]
format = '\[[⏱ $duration]($style)\]'

[cobol]
format = '\[[$symbol($version)]($style)\]'

[conda]
format = '\[[$symbol$environment]($style)\]'

[crystal]
format = '\[[$symbol($version)]($style)\]'

[dart]
format = '\[[$symbol($version)]($style)\]'

[deno]
format = '\[[$symbol($version)]($style)\]'

[docker_context]
format = '\[[$symbol$context]($style)\]'

[dotnet]
format = '\[[$symbol($version)(🎯 $tfm)]($style)\]'

[elixir]
format = '\[[$symbol($version \(OTP $otp_version\))]($style)\]'

[elm]
format = '\[[$symbol($version)]($style)\]'

[erlang]
format = '\[[$symbol($version)]($style)\]'

[gcloud]
format = '\[[$symbol$account(@$domain)(\($region\))]($style)\]'

[git_branch]
format = '\[[$symbol$branch]($style)\]'

[git_status]
format = '([\[$all_status$ahead_behind\]]($style))'

[golang]
format = '\[[$symbol($version)]($style)\]'

[helm]
format = '\[[$symbol($version)]($style)\]'

[hg_branch]
format = '\[[$symbol$branch]($style)\]'

[java]
format = '\[[$symbol($version)]($style)\]'

[julia]
format = '\[[$symbol($version)]($style)\]'

[kotlin]
format = '\[[$symbol($version)]($style)\]'

[kubernetes]
format = '\[[$symbol$context( \($namespace\))]($style)\]'

[lua]
format = '\[[$symbol($version)]($style)\]'

[memory_usage]
format = '\[$symbol[$ram( | $swap)]($style)\]'

[nim]
format = '\[[$symbol($version)]($style)\]'

[nix_shell]
format = '\[[$symbol$state( \($name\))]($style)\]'

[nodejs]
format = '\[[$symbol($version)]($style)\]'

[ocaml]
format = '\[[$symbol($version)(\($switch_indicator$switch_name\))]($style)\]'

[openstack]
format = '\[[$symbol$cloud(\($project\))]($style)\]'

[package]
format = '\[[$symbol$version]($style)\]'

[perl]
format = '\[[$symbol($version)]($style)\]'

[php]
format = '\[[$symbol($version)]($style)\]'

[pulumi]
format = '\[[$symbol$stack]($style)\]'

[purescript]
format = '\[[$symbol($version)]($style)\]'

[python]
format = '\[[${symbol}${pyenv_prefix}(${version})(\($virtualenv\))]($style)\]'

[red]
format = '\[[$symbol($version)]($style)\]'

[ruby]
format = '\[[$symbol($version)]($style)\]'

[rust]
format = '\[[$symbol($version)]($style)\]'

[scala]
format = '\[[$symbol($version)]($style)\]'

[sudo]
format = '\[[as $symbol]\]'

[swift]
format = '\[[$symbol($version)]($style)\]'

[terraform]
format = '\[[$symbol$workspace]($style)\]'

[time]
format = '\[[$time]($style)\]'

[username]
format = '\[[$user]($style)\]'

[vagrant]
format = '\[[$symbol($version)]($style)\]'

[vlang]
format = '\[[$symbol($version)]($style)\]'

[zig]
format = '\[[$symbol($version)]($style)\]'

